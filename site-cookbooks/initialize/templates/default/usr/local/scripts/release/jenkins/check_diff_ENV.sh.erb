#!/bin/sh

#####################################################################
# @copyright   Copyright (c) 2011-, AllAbout Inc
# @author      k_ohhara
# @create      2014/02/04 k_ohhara
# @update      YYYY/MM/DD Name
# @summary     check diff of ENV
# @usage       xxxxx aaa bbb
#####################################################################

# シェルのファイル名と同じログを自動生成
EXEC_FULLPATH=`readlink -f $0`
BASENAME=${EXEC_FULLPATH##*/}
#BASENAME=`basename $0`
BASEDIRNAME=${EXEC_FULLPATH%/*}
LOG_DIRNAME=`echo $BASEDIRNAME |sed s%/usr/local/scripts%/var/log/usrlogs%g`
LOG_FILE="$LOG_DIRNAME/$BASENAME.log"

if [ ! -d $LOG_DIRNAME ]; then
    mkdir $LOG_DIRNAME
fi
echo "#####start args=$@ `date '+%Y/%m/%d %T'`#####" >> $LOG_FILE 2>&1
#ここに追加したい処理を記述してください。

ENV_NAME_PF=$1   # pf上のENV名
ENV_NAME=$2      # 本番上のENV名
FIRST_RELEASE=$3
ENV_COPY=${ENV_NAME}.check  # pfから本番にコピーしたENVの名前

scp -p <%= node.normal['release']['from'] %>:/app/ENV/$ENV_NAME_PF /app/ENV/$ENV_COPY
if [ $FIRST_RELEASE = true ]; then
  echo deploy_ENV_pipelineから本番反映して下さい。
  exit;
fi

cd /app/ENV
if [ ! -f $ENV_NAME ]; then
  echo
  echo Error  : ENV $ENV_NAME not found
  echo
  exit 1;
fi

if [ ! -f "/usr/local/scripts/release/jenkins/server_list.txt" ]; then
   echo "########################################"
   echo "Error : server_list not found."
   echo "########################################"
   exit 1
fi
server_list=(`cat /usr/local/scripts/release/jenkins/server_list.txt`)
if [ ${#server_list[@]} -eq 0 ]; then
  server_list+=`hostname`
fi
ssh ${server_list[0]} cat /app/ENV/${ENV_NAME} > /dev/null
if [ $? -ne 0 ]; then
  echo "---------------- Error! -----------"
  echo " $ENV_NAME not found in aaweb02"
  echo " Is this the first release?"
  echo "-----------------------------------"
  exit 1;
fi

DIFFERENCE=`ssh ${server_list[0]} cat /app/ENV/${ENV_NAME} | diff - /app/ENV/$ENV_COPY | cat`
CHECK_DB1=`echo ${DIFFERENCE} | grep "\$db" | grep "hostname" | cat`
CHECK_DB2=`echo ${DIFFERENCE} | grep "DB_HOST" | cat`
CHECK_TT=`echo ${DIFFERENCE} | grep "\$tt_config" | grep "ip" | cat`

# DBもしくはKVSのIPに変更がある場合、警告を出す
if [ -n "${CHECK_DB1}" -o -n "${CHECK_DB2}" -o -n "${CHECK_TT}" ]; then
  echo ---------------- Warning! ----------------
  echo DBまたはKVSのIPが変更されています！
  echo diffをもう一度確認して下さい！
  echo ------------------------------------------
  echo "---------- diff of ENV (password is masked) -----------"
  ssh ${server_list[0]} cat /app/ENV/${ENV_NAME} | diff - /app/ENV/$ENV_COPY | sed -e "s/\(.*\)\(password\|PASSWORD\|key\|KEY\)\(.*[\"\']\).*\([\"\'][;,\)]\)/\1\2\3\*\*\*\4/"
  echo "-------------------------------------------------------"
  exit;
fi

# チェックをpassした場合、diffを表示する
echo diffを確認して、問題なければdeploy_ENV_pipelineから本番反映して下さい。
echo "---------- diff of ENV (password is masked) -----------"
ssh ${server_list[0]} cat /app/ENV/${ENV_NAME} | diff - /app/ENV/$ENV_COPY | sed -e "s/\(.*\)\(password\|PASSWORD\|key\|KEY\)\(.*[\"\']\).*\([\"\'][;,\)]\)/\1\2\3\*\*\*\4/"
echo "-------------------------------------------------------"

echo "#####end   args=$@ `date '+%Y/%m/%d %T'`#####" >> $LOG_FILE 2>&1

